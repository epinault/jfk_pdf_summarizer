<div class="mx-auto max-w-4xl p-6 bg-white rounded-lg shadow-md">
  <h1 class="text-3xl font-bold text-center mb-8">JFK Document Collection</h1>
  
  <p class="mb-6 text-gray-700">
    The National Archives has released thousands of documents related to the assassination of President John F. Kennedy. 
    Below is a curated list of important documents from the <a href="https://www.archives.gov/research/jfk/release-2025" class="text-indigo-600 hover:text-indigo-800 underline">JFK Collection</a>.
  </p>
  
  <div class="mb-6">
    <div class="relative">
      <input 
        type="text" 
        id="document-search" 
        placeholder="Search documents..." 
        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
      />
      <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
        <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
        </svg>
      </div>
    </div>
  </div>
  
  <div class="mb-8">
    <h2 class="text-xl font-semibold mb-4">Available Documents (<span id="document-count"><%= length(@documents) %></span>)</h2>
    
    <div id="document-list" class="space-y-4">
      <%= for document <- @documents do %>
        <div class="document-item border border-gray-200 rounded-lg p-4 hover:bg-gray-50">
          <h3 class="font-medium text-lg"><%= document.title %></h3>
          <p class="text-gray-600 mb-3"><%= document.description %></p>
          <div class="flex justify-between items-center">
            <a href={document.url} target="_blank" class="text-indigo-600 hover:text-indigo-800 underline">View Document</a>
            <form action={~p"/summarize-url"} method="post">
              <input type="hidden" name="_csrf_token" value={get_csrf_token()} />
              <input type="hidden" name="url" value={document.url} />
              <button 
                type="submit" 
                class="inline-flex items-center px-3 py-1.5 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
              >
                Summarize
              </button>
            </form>
          </div>
        </div>
      <% end %>
    </div>
    
    <div class="mt-6 flex justify-between items-center">
      <div>
        <span id="showing-text">Showing all documents</span>
      </div>
      <div class="flex space-x-2">
        <button id="prev-page" class="px-3 py-1 border border-gray-300 rounded-md bg-white text-gray-700 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed">
          Previous
        </button>
        <span id="page-info" class="px-3 py-1 border border-gray-300 rounded-md bg-white">Page 1</span>
        <button id="next-page" class="px-3 py-1 border border-gray-300 rounded-md bg-white text-gray-700 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed">
          Next
        </button>
      </div>
    </div>
  </div>
  
  <div class="mb-8">
    <h2 class="text-xl font-semibold mb-4">About the JFK Collection</h2>
    <div class="bg-gray-50 p-4 rounded-lg border border-gray-200">
      <p class="mb-2">
        The President John F. Kennedy Assassination Records Collection Act of 1992 required that all assassination-related material be housed in a single collection in the National Archives and Records Administration (NARA).
      </p>
      <p>
        The Collection consists of more than 5 million pages of assassination-related records, photographs, motion pictures, sound recordings, and artifacts.
      </p>
    </div>
  </div>
  
  <div class="text-center">
    <a 
      href={~p"/"} 
      class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
    >
      Back to Home
    </a>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const documentItems = document.querySelectorAll('.document-item');
    const documentList = document.getElementById('document-list');
    const searchInput = document.getElementById('document-search');
    const documentCount = document.getElementById('document-count');
    const showingText = document.getElementById('showing-text');
    const prevPageBtn = document.getElementById('prev-page');
    const nextPageBtn = document.getElementById('next-page');
    const pageInfo = document.getElementById('page-info');
    
    const itemsPerPage = 20;
    let currentPage = 1;
    let filteredItems = [...documentItems];
    
    // Initialize pagination
    function updatePagination() {
      const totalPages = Math.ceil(filteredItems.length / itemsPerPage);
      pageInfo.textContent = `Page ${currentPage} of ${totalPages}`;
      
      prevPageBtn.disabled = currentPage === 1;
      nextPageBtn.disabled = currentPage === totalPages || totalPages === 0;
      
      // Show only items for current page
      documentItems.forEach(item => item.style.display = 'none');
      
      const startIndex = (currentPage - 1) * itemsPerPage;
      const endIndex = Math.min(startIndex + itemsPerPage, filteredItems.length);
      
      for (let i = startIndex; i < endIndex; i++) {
        filteredItems[i].style.display = 'block';
      }
      
      showingText.textContent = filteredItems.length === documentItems.length 
        ? `Showing ${startIndex + 1}-${endIndex} of ${filteredItems.length} documents` 
        : `Showing ${startIndex + 1}-${endIndex} of ${filteredItems.length} filtered documents`;
    }
    
    // Search functionality
    searchInput.addEventListener('input', function() {
      const searchTerm = this.value.toLowerCase();
      
      filteredItems = [...documentItems].filter(item => {
        const title = item.querySelector('h3').textContent.toLowerCase();
        const description = item.querySelector('p').textContent.toLowerCase();
        return title.includes(searchTerm) || description.includes(searchTerm);
      });
      
      documentCount.textContent = filteredItems.length;
      currentPage = 1;
      updatePagination();
    });
    
    // Pagination event listeners
    prevPageBtn.addEventListener('click', function() {
      if (currentPage > 1) {
        currentPage--;
        updatePagination();
        window.scrollTo(0, 0);
      }
    });
    
    nextPageBtn.addEventListener('click', function() {
      const totalPages = Math.ceil(filteredItems.length / itemsPerPage);
      if (currentPage < totalPages) {
        currentPage++;
        updatePagination();
        window.scrollTo(0, 0);
      }
    });
    
    // Initial setup
    updatePagination();
  });
</script>
